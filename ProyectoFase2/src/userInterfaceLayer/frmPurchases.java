/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package userInterfaceLayer;

import businessLogicLayer.BLProducts;
import businessLogicLayer.BLSupplier;
import businessLogicLayer.Validations;
import entityLayer.Product;
import entityLayer.Supplier;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kevin Bolaños V.
 */
public class frmPurchases extends javax.swing.JInternalFrame {
    DefaultTableModel model;
    Validations validate = new Validations();
    List<Product> productList = new ArrayList<>();
    int SuppId;
    /**
     * Creates new form frmPurchases
     */
    public frmPurchases() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSupplierName = new javax.swing.JTextField();
        txtSupplierPhone = new javax.swing.JTextField();
        txtSupplierEmail = new javax.swing.JTextField();
        txtSupplierAddress = new javax.swing.JTextField();
        btnLoadSupplier = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        btnLoadProduct = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        txtTaxes = new javax.swing.JTextField();
        btnGenerateInvoice = new javax.swing.JButton();
        btnRemoveFromLlist = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        jLabel1.setText("Información del Proveedor: ");

        jLabel2.setText("Nombre: ");

        jLabel3.setText("Número: ");

        jLabel4.setText("Correo: ");

        jLabel5.setText("Dirección: ");

        txtSupplierName.setEditable(false);

        txtSupplierPhone.setEditable(false);

        txtSupplierEmail.setEditable(false);

        txtSupplierAddress.setEditable(false);

        btnLoadSupplier.setText("Cargar Proveedor");
        btnLoadSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadSupplierActionPerformed(evt);
            }
        });

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        btnLoadProduct.setText("Cargar Productos");
        btnLoadProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadProductActionPerformed(evt);
            }
        });

        jLabel6.setText("Impuestos");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel7.setText("Compras");

        jLabel8.setText("Monto Final: ");

        txtTotalAmount.setEditable(false);

        txtTaxes.setEditable(false);

        btnGenerateInvoice.setText("Realizar Factura");
        btnGenerateInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateInvoiceActionPerformed(evt);
            }
        });

        btnRemoveFromLlist.setText("Borrar de la lista");
        btnRemoveFromLlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFromLlistActionPerformed(evt);
            }
        });

        btnExit.setText("Salir");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(235, 235, 235)
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtSupplierName))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSupplierAddress)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtSupplierPhone))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(26, 26, 26)
                                .addComponent(txtSupplierEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLoadSupplier)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLoadProduct)
                .addGap(18, 18, 18)
                .addComponent(btnGenerateInvoice)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveFromLlist)
                .addGap(18, 18, 18)
                .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(txtTaxes, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtSupplierEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSupplierPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtSupplierAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(btnLoadSupplier)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtTaxes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLoadProduct)
                        .addComponent(jLabel8)
                        .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGenerateInvoice)
                        .addComponent(btnRemoveFromLlist)
                        .addComponent(btnExit)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    public void loadProducts(Product product_, int quantity) throws Exception {
    try {
        product_.setReorderQuantity(quantity);
        productList.add(product_);
        updateTable(); // Actualizar la tabla y los totales
    } catch (Exception e) {
        //JOptionPane.showMessageDialog(this, e);
    }
}

  public double calculateTotalAmount(int columnToSum) {
    double totalAmount = 0.0;

    for (int row = 0; row < model.getRowCount(); row++) {
        Object value = model.getValueAt(row, columnToSum);
        if (value instanceof Double) {
            totalAmount += (double) value;
        } else if (value instanceof String) {
            // If the value is a string, try to parse it to double
            try {
                totalAmount += Double.parseDouble((String) value);
            } catch (NumberFormatException e) {
                // Handle parsing error
            }
        }
    }

    return totalAmount;
}
  
public void clearTable() {
    model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    tblProducts.setModel(model);
    model.addColumn("Producto ID");
    model.addColumn("Nombre");
    model.addColumn("Descripción");
    model.addColumn("Existencia inicial");
    model.addColumn("Existencias actuales");
    model.addColumn("Reorden");
    model.addColumn("Precio");
    model.addColumn("Impuestos");
}
    private void btnLoadProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadProductActionPerformed
       // TODO add your handling code here:
       if(txtSupplierName.getText().equals("")){
           JOptionPane.showMessageDialog(this, "Debe cargar un Proveedor");
           return;
       }
    frmLoadProduct loadProductForm = new frmLoadProduct(null, true, false); // Null que no tiene contenedor y true que es un modal
    loadProductForm.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            try {
                int quantity = loadProductForm.GetQuantity();
                int productId = loadProductForm.GetId();
                String condition;
                BLProducts logic = new BLProducts();
                Product product;
                
                if (productId != -1) {
                condition = "PRODUCTID = " + productId;
                product = logic.getProduct(condition);
                loadProducts(product, quantity);

                } else {
                    
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
            }
        }
    });
    loadProductForm.setVisible(true);
    }//GEN-LAST:event_btnLoadProductActionPerformed

    private void btnLoadSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadSupplierActionPerformed
        // TODO add your handling code here:
        frmLoadSupplier loadSupplier = new frmLoadSupplier(null, true); // Null que no tiene contenedor y true que es un modal
        loadSupplier.setLocationRelativeTo(null);
        loadSupplier.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            try {
                int supplierId = loadSupplier.GetId();
                String condition;
                BLSupplier logic = new BLSupplier();
                Supplier supplier;
                
                if (supplierId != -1) {
                productList.clear();
                updateTable();
                condition = "SUPPLIERID = " + supplierId;
                SuppId = supplierId;
                supplier = logic.getSupplier(condition);
                txtSupplierAddress.setText(supplier.getAddress());
                txtSupplierName.setText(supplier.getFirstNameSupplier() + " " + supplier.getLastNameSupplier());
                txtSupplierPhone.setText(supplier.getContactNumber());
                txtSupplierEmail.setText(supplier.getEmailSupplier());
                } else {
                    
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
            }
        }
    });
    loadSupplier.setVisible(true);
    }//GEN-LAST:event_btnLoadSupplierActionPerformed

    private void btnGenerateInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateInvoiceActionPerformed
        if (productList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe cargar productos antes de generar una factura.");
            return;
         }
        frmPurchaseReceipt Receipt = new frmPurchaseReceipt(null, true); // Null que no tiene contenedor y true que es un modal
        Receipt.setLocationRelativeTo(null);
        final frmPurchases this_ = this;
        Receipt.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            try {
                // Pasar la lista productList al formulario purchaseReceiptForm
                this_.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
            }
        }
    });
    Receipt.loadPurchaseData(productList, txtSupplierPhone.getText(), SuppId, txtSupplierName.getText());    
    Receipt.setVisible(true);
    }//GEN-LAST:event_btnGenerateInvoiceActionPerformed

    private void btnRemoveFromLlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromLlistActionPerformed
        // TODO add your handling code here:
        btnRemoveFromLlist.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
        removeSelectedProduct();
    }
    });
    }//GEN-LAST:event_btnRemoveFromLlistActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void removeSelectedProduct() {
    int selectedRow = tblProducts.getSelectedRow();
    
    if (selectedRow != -1) {
        productList.remove(selectedRow);
        updateTable();
        
    } 
}


    private void updateTable() {
    clearTable();

        for (Product product : productList) {
            Object[] fila = new Object[8];
            fila[0] = product.getProductId();
            fila[1] = product.getProducName();
            fila[2] = product.getDescription();
            fila[3] = product.getInitialStock();
            fila[4] = product.getCurrentStock();
            fila[5] = product.getReorderQuantity(); 
            fila[6] = String.format("%.2f", product.getPrice() * product.getReorderQuantity());
            double taxes = product.getPrice() * product.getReorderQuantity() * 0.13;
            fila[7] = taxes;
            model.addRow(fila);
        }

    double totalAmount = calculateTotalAmount(6);
    double totalTaxes = calculateTotalAmount(7);
    txtTotalAmount.setText(Double.toString(totalAmount + totalTaxes));
    txtTaxes.setText(Double.toString(totalTaxes));
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGenerateInvoice;
    private javax.swing.JButton btnLoadProduct;
    private javax.swing.JButton btnLoadSupplier;
    private javax.swing.JButton btnRemoveFromLlist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSupplierAddress;
    private javax.swing.JTextField txtSupplierEmail;
    private javax.swing.JTextField txtSupplierName;
    private javax.swing.JTextField txtSupplierPhone;
    private javax.swing.JTextField txtTaxes;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables
}
