/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package userInterfaceLayer;

import businessLogicLayer.BLProducts;
import businessLogicLayer.Validations;
import entityLayer.Product;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kevin Bolaños V.
 */
public class frmLoadProduct extends javax.swing.JDialog {
    DefaultTableModel model;
    Validations validate = new Validations();
    boolean isFromSaleForm_;
    /**
     * Creates new form frmLoadProduct
     */
public frmLoadProduct(java.awt.Frame parent, boolean modal, boolean isFromSaleForm) { // isFromSaleForm Para hacer la diferencia entre el precio de compra y venta
    super(parent, modal);
    this.setTitle("Formulario cargar producto");
    initComponents();
    isFromSaleForm_ = isFromSaleForm;
    this.setLocationRelativeTo(null);
    
    addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosing(WindowEvent e) {
            int option = JOptionPane.showConfirmDialog(frmLoadProduct.this,
                "¿Estás seguro de que deseas cerrar?", "Confirmar cierre", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                cleanField();
                dispose();
            }
        }
    });

    try {
        loadProducts("", isFromSaleForm); // Pasar el valor del nuevo parámetro
    } catch (Exception e) {
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdProduct = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtProductNameToSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtInitialStock = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCurrentStock = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnLoadProduct = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Número de producto: ");

        txtIdProduct.setEditable(false);

        jLabel2.setText("Nombre: ");

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("Descripción");

        txtDescription.setEditable(false);
        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        jLabel4.setText("Precio unitario: ");

        txtUnitPrice.setEditable(false);

        jLabel5.setText("Existencia inicial: ");

        txtInitialStock.setEditable(false);

        jLabel6.setText("Existencias: ");

        txtCurrentStock.setEditable(false);

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProducts);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel8.setText("Seleccionar producto");

        jLabel9.setText("Cantidad: ");

        btnLoadProduct.setText("Cargar");
        btnLoadProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadProductActionPerformed(evt);
            }
        });

        btnExit.setText("Cancelar");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnClear.setText("Limpiar");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtProductNameToSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIdProduct)
                                    .addComponent(txtInitialStock, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                                .addGap(203, 203, 203)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCurrentStock)
                                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnLoadProduct)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnExit)
                                        .addGap(343, 343, 343)))
                                .addComponent(btnClear))
                            .addComponent(jScrollPane2))
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProductNameToSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtInitialStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtCurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoadProduct)
                    .addComponent(btnExit)
                    .addComponent(btnClear))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    try {
        String condition = "";
        if (!txtProductNameToSearch.getText().equals("")) {
            condition = ("PRODUCTNAME LIKE '%" +txtProductNameToSearch.getText()+"%'" );
        }
        loadProducts(condition, isFromSaleForm_);
    } catch (Exception e) {
       
    }
    }//GEN-LAST:event_btnSearchActionPerformed

    public void cleanField(){
        txtCurrentStock.setText("");
        txtDescription.setText("");
        txtIdProduct.setText("");
        txtInitialStock.setText("");
        txtProductNameToSearch.setText("");
        txtQuantity.setText("");
        txtUnitPrice.setText("");
        tblProducts.clearSelection();
    }
        
    private void tblProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
        int selectedRow = tblProducts.getSelectedRow();
        if (selectedRow != -1) {
            txtIdProduct.setText(tblProducts.getValueAt(selectedRow, 0).toString());
            txtProductNameToSearch.setText(tblProducts.getValueAt(selectedRow, 1).toString());
            txtDescription.setText(tblProducts.getValueAt(selectedRow, 2).toString());
            txtInitialStock.setText(tblProducts.getValueAt(selectedRow, 3).toString());
            txtCurrentStock.setText(tblProducts.getValueAt(selectedRow, 4).toString());
            txtUnitPrice.setText(tblProducts.getValueAt(selectedRow, 5).toString());
            }
        }
    }//GEN-LAST:event_tblProductsMouseClicked

    private void btnLoadProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadProductActionPerformed
    // TODO add your handling code here:
    if (txtQuantity.getText().isEmpty() || Integer.parseInt(txtQuantity.getText()) <= 0) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una cantidad válida y mayor a cero");
        return;
    }

    if (!validate.validateQuantity(txtQuantity.getText())) {
        JOptionPane.showMessageDialog(this, "Debe digitar una cantidad válida");
        return;
    }

    int selectedRow = tblProducts.getSelectedRow();
    if (selectedRow != -1) {
        int currentStock = Integer.parseInt(tblProducts.getValueAt(selectedRow, 4).toString());
        int requestedQuantity = Integer.parseInt(txtQuantity.getText());
        if(isFromSaleForm_){
            if (requestedQuantity > currentStock) {
            JOptionPane.showMessageDialog(this, "La cantidad a cargar es mayor que las existencias actuales");
            return;
        }
        }
        txtProductNameToSearch.setText(tblProducts.getValueAt(selectedRow, 0).toString());
        this.dispose();
    }
    }//GEN-LAST:event_btnLoadProductActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        cleanField();
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        cleanField();
    }//GEN-LAST:event_btnClearActionPerformed
    
public int GetId() {
    int id = -1;
    try {

        int selectedRow = tblProducts.getSelectedRow(); 
        if (selectedRow != -1) { 
            id = (int) tblProducts.getValueAt(selectedRow, 0);
        }

    } catch (Exception e) {
    }
    return id;
}

public int GetQuantity() {
    int quantity = -1;
    try {

        int selectedRow = tblProducts.getSelectedRow(); 
        if (selectedRow != -1) { 
            quantity = Integer.parseInt(txtQuantity.getText());
        }

    } catch (Exception e) {
    }
    return quantity;
}
public void loadProducts(String condition, boolean isFromSpecialForm) throws Exception {
    try {
        BLProducts logic = new BLProducts();
        List<Product> list;
        clearTable(); 
        Object[] fila = new Object[8]; 
        list = logic.listProducts(condition, ""); 
        for (Product product : list) {
            fila[0] = product.getProductId();
            fila[1] = product.getProducName();
            fila[2] = product.getDescription();
            fila[3] = product.getInitialStock();
            fila[4] = product.getCurrentStock();
            
            double adjustedPrice = product.getPrice();
            if (isFromSpecialForm) {
                adjustedPrice *= 1.25; // Aumento del 25%
            }
            
            fila[5] = adjustedPrice; // Usar el precio ajustado
            
            model.addRow(fila); 
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
}
    
public void clearTable() {
    model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    tblProducts.setModel(model);
    model.addColumn("Producto ID");
    model.addColumn("Nombre");
    model.addColumn("Descripción");
    model.addColumn("Existencia inicial");
    model.addColumn("Existencias actuales");
    model.addColumn("Precio Unitario");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLoadProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLoadProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLoadProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLoadProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
  java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            frmLoadProduct dialog = new frmLoadProduct(new java.awt.Frame(), true, false); // Modifica los valores booleanos según tu caso
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLoadProduct;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtCurrentStock;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtIdProduct;
    private javax.swing.JTextField txtInitialStock;
    private javax.swing.JTextField txtProductNameToSearch;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables
}
